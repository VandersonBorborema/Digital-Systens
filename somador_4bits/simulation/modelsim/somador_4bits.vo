// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "04/10/2024 21:09:29"

// 
// Device: Altera EP2C35F672C6 Package FBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module somador_4bits (
	Cout,
	X,
	Y,
	Cin,
	S);
output 	Cout;
input 	[3:0] X;
input 	[3:0] Y;
input 	Cin;
output 	[3:0] S;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Cin~combout ;
wire \inst3|inst2~1_combout ;
wire \inst2|inst2~0_combout ;
wire \inst1|inst2~0_combout ;
wire \inst1|inst2~1_combout ;
wire \inst|inst2~0_combout ;
wire \inst|inst5~combout ;
wire \inst1|inst5~0_combout ;
wire \inst3|inst2~0_combout ;
wire \inst2|inst5~combout ;
wire \inst3|inst5~0_combout ;
wire [3:0] \X~combout ;
wire [3:0] \Y~combout ;


cycloneii_io \X[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\X~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(X[0]));
// synopsys translate_off
defparam \X[0]~I .input_async_reset = "none";
defparam \X[0]~I .input_power_up = "low";
defparam \X[0]~I .input_register_mode = "none";
defparam \X[0]~I .input_sync_reset = "none";
defparam \X[0]~I .oe_async_reset = "none";
defparam \X[0]~I .oe_power_up = "low";
defparam \X[0]~I .oe_register_mode = "none";
defparam \X[0]~I .oe_sync_reset = "none";
defparam \X[0]~I .operation_mode = "input";
defparam \X[0]~I .output_async_reset = "none";
defparam \X[0]~I .output_power_up = "low";
defparam \X[0]~I .output_register_mode = "none";
defparam \X[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Cin~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Cin~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Cin));
// synopsys translate_off
defparam \Cin~I .input_async_reset = "none";
defparam \Cin~I .input_power_up = "low";
defparam \Cin~I .input_register_mode = "none";
defparam \Cin~I .input_sync_reset = "none";
defparam \Cin~I .oe_async_reset = "none";
defparam \Cin~I .oe_power_up = "low";
defparam \Cin~I .oe_register_mode = "none";
defparam \Cin~I .oe_sync_reset = "none";
defparam \Cin~I .operation_mode = "input";
defparam \Cin~I .output_async_reset = "none";
defparam \Cin~I .output_power_up = "low";
defparam \Cin~I .output_register_mode = "none";
defparam \Cin~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \inst3|inst2~1 (
// Equation(s):
// \inst3|inst2~1_combout  = (\Y~combout [0] & ((\X~combout [0]) # (\Cin~combout )))

	.dataa(\Y~combout [0]),
	.datab(\X~combout [0]),
	.datac(\Cin~combout ),
	.datad(vcc),
	.cin(gnd),
	.combout(\inst3|inst2~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst3|inst2~1 .lut_mask = 16'hA8A8;
defparam \inst3|inst2~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \X[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\X~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(X[1]));
// synopsys translate_off
defparam \X[1]~I .input_async_reset = "none";
defparam \X[1]~I .input_power_up = "low";
defparam \X[1]~I .input_register_mode = "none";
defparam \X[1]~I .input_sync_reset = "none";
defparam \X[1]~I .oe_async_reset = "none";
defparam \X[1]~I .oe_power_up = "low";
defparam \X[1]~I .oe_register_mode = "none";
defparam \X[1]~I .oe_sync_reset = "none";
defparam \X[1]~I .operation_mode = "input";
defparam \X[1]~I .output_async_reset = "none";
defparam \X[1]~I .output_power_up = "low";
defparam \X[1]~I .output_register_mode = "none";
defparam \X[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Y[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Y~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Y[1]));
// synopsys translate_off
defparam \Y[1]~I .input_async_reset = "none";
defparam \Y[1]~I .input_power_up = "low";
defparam \Y[1]~I .input_register_mode = "none";
defparam \Y[1]~I .input_sync_reset = "none";
defparam \Y[1]~I .oe_async_reset = "none";
defparam \Y[1]~I .oe_power_up = "low";
defparam \Y[1]~I .oe_register_mode = "none";
defparam \Y[1]~I .oe_sync_reset = "none";
defparam \Y[1]~I .operation_mode = "input";
defparam \Y[1]~I .output_async_reset = "none";
defparam \Y[1]~I .output_power_up = "low";
defparam \Y[1]~I .output_register_mode = "none";
defparam \Y[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \inst2|inst2~0 (
// Equation(s):
// \inst2|inst2~0_combout  = (\X~combout [1] & ((\inst3|inst2~0_combout ) # ((\inst3|inst2~1_combout ) # (\Y~combout [1])))) # (!\X~combout [1] & (\Y~combout [1] & ((\inst3|inst2~0_combout ) # (\inst3|inst2~1_combout ))))

	.dataa(\inst3|inst2~0_combout ),
	.datab(\inst3|inst2~1_combout ),
	.datac(\X~combout [1]),
	.datad(\Y~combout [1]),
	.cin(gnd),
	.combout(\inst2|inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2|inst2~0 .lut_mask = 16'hFEE0;
defparam \inst2|inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst1|inst2~0 (
// Equation(s):
// \inst1|inst2~0_combout  = (\X~combout [2] & \inst2|inst2~0_combout )

	.dataa(\X~combout [2]),
	.datab(\inst2|inst2~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\inst1|inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|inst2~0 .lut_mask = 16'h8888;
defparam \inst1|inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \X[2]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\X~combout [2]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(X[2]));
// synopsys translate_off
defparam \X[2]~I .input_async_reset = "none";
defparam \X[2]~I .input_power_up = "low";
defparam \X[2]~I .input_register_mode = "none";
defparam \X[2]~I .input_sync_reset = "none";
defparam \X[2]~I .oe_async_reset = "none";
defparam \X[2]~I .oe_power_up = "low";
defparam \X[2]~I .oe_register_mode = "none";
defparam \X[2]~I .oe_sync_reset = "none";
defparam \X[2]~I .operation_mode = "input";
defparam \X[2]~I .output_async_reset = "none";
defparam \X[2]~I .output_power_up = "low";
defparam \X[2]~I .output_register_mode = "none";
defparam \X[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \inst1|inst2~1 (
// Equation(s):
// \inst1|inst2~1_combout  = (\Y~combout [2] & ((\X~combout [2]) # (\inst2|inst2~0_combout )))

	.dataa(\Y~combout [2]),
	.datab(\X~combout [2]),
	.datac(\inst2|inst2~0_combout ),
	.datad(vcc),
	.cin(gnd),
	.combout(\inst1|inst2~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|inst2~1 .lut_mask = 16'hA8A8;
defparam \inst1|inst2~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \X[3]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\X~combout [3]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(X[3]));
// synopsys translate_off
defparam \X[3]~I .input_async_reset = "none";
defparam \X[3]~I .input_power_up = "low";
defparam \X[3]~I .input_register_mode = "none";
defparam \X[3]~I .input_sync_reset = "none";
defparam \X[3]~I .oe_async_reset = "none";
defparam \X[3]~I .oe_power_up = "low";
defparam \X[3]~I .oe_register_mode = "none";
defparam \X[3]~I .oe_sync_reset = "none";
defparam \X[3]~I .operation_mode = "input";
defparam \X[3]~I .output_async_reset = "none";
defparam \X[3]~I .output_power_up = "low";
defparam \X[3]~I .output_register_mode = "none";
defparam \X[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Y[3]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Y~combout [3]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Y[3]));
// synopsys translate_off
defparam \Y[3]~I .input_async_reset = "none";
defparam \Y[3]~I .input_power_up = "low";
defparam \Y[3]~I .input_register_mode = "none";
defparam \Y[3]~I .input_sync_reset = "none";
defparam \Y[3]~I .oe_async_reset = "none";
defparam \Y[3]~I .oe_power_up = "low";
defparam \Y[3]~I .oe_register_mode = "none";
defparam \Y[3]~I .oe_sync_reset = "none";
defparam \Y[3]~I .operation_mode = "input";
defparam \Y[3]~I .output_async_reset = "none";
defparam \Y[3]~I .output_power_up = "low";
defparam \Y[3]~I .output_register_mode = "none";
defparam \Y[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \inst|inst2~0 (
// Equation(s):
// \inst|inst2~0_combout  = (\X~combout [3] & ((\inst1|inst2~0_combout ) # ((\inst1|inst2~1_combout ) # (\Y~combout [3])))) # (!\X~combout [3] & (\Y~combout [3] & ((\inst1|inst2~0_combout ) # (\inst1|inst2~1_combout ))))

	.dataa(\inst1|inst2~0_combout ),
	.datab(\inst1|inst2~1_combout ),
	.datac(\X~combout [3]),
	.datad(\Y~combout [3]),
	.cin(gnd),
	.combout(\inst|inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst2~0 .lut_mask = 16'hFEE0;
defparam \inst|inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst|inst5 (
// Equation(s):
// \inst|inst5~combout  = \X~combout [3] $ (\Y~combout [3] $ (((\inst1|inst2~0_combout ) # (\inst1|inst2~1_combout ))))

	.dataa(\X~combout [3]),
	.datab(\Y~combout [3]),
	.datac(\inst1|inst2~0_combout ),
	.datad(\inst1|inst2~1_combout ),
	.cin(gnd),
	.combout(\inst|inst5~combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst5 .lut_mask = 16'h9996;
defparam \inst|inst5 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \Y[2]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Y~combout [2]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Y[2]));
// synopsys translate_off
defparam \Y[2]~I .input_async_reset = "none";
defparam \Y[2]~I .input_power_up = "low";
defparam \Y[2]~I .input_register_mode = "none";
defparam \Y[2]~I .input_sync_reset = "none";
defparam \Y[2]~I .oe_async_reset = "none";
defparam \Y[2]~I .oe_power_up = "low";
defparam \Y[2]~I .oe_register_mode = "none";
defparam \Y[2]~I .oe_sync_reset = "none";
defparam \Y[2]~I .operation_mode = "input";
defparam \Y[2]~I .output_async_reset = "none";
defparam \Y[2]~I .output_power_up = "low";
defparam \Y[2]~I .output_register_mode = "none";
defparam \Y[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \inst1|inst5~0 (
// Equation(s):
// \inst1|inst5~0_combout  = \X~combout [2] $ (\inst2|inst2~0_combout  $ (\Y~combout [2]))

	.dataa(\X~combout [2]),
	.datab(\inst2|inst2~0_combout ),
	.datac(\Y~combout [2]),
	.datad(vcc),
	.cin(gnd),
	.combout(\inst1|inst5~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|inst5~0 .lut_mask = 16'h9696;
defparam \inst1|inst5~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst3|inst2~0 (
// Equation(s):
// \inst3|inst2~0_combout  = (\X~combout [0] & \Cin~combout )

	.dataa(\X~combout [0]),
	.datab(\Cin~combout ),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\inst3|inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst3|inst2~0 .lut_mask = 16'h8888;
defparam \inst3|inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \inst2|inst5 (
// Equation(s):
// \inst2|inst5~combout  = \X~combout [1] $ (\Y~combout [1] $ (((\inst3|inst2~0_combout ) # (\inst3|inst2~1_combout ))))

	.dataa(\X~combout [1]),
	.datab(\Y~combout [1]),
	.datac(\inst3|inst2~0_combout ),
	.datad(\inst3|inst2~1_combout ),
	.cin(gnd),
	.combout(\inst2|inst5~combout ),
	.cout());
// synopsys translate_off
defparam \inst2|inst5 .lut_mask = 16'h9996;
defparam \inst2|inst5 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \Y[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Y~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Y[0]));
// synopsys translate_off
defparam \Y[0]~I .input_async_reset = "none";
defparam \Y[0]~I .input_power_up = "low";
defparam \Y[0]~I .input_register_mode = "none";
defparam \Y[0]~I .input_sync_reset = "none";
defparam \Y[0]~I .oe_async_reset = "none";
defparam \Y[0]~I .oe_power_up = "low";
defparam \Y[0]~I .oe_register_mode = "none";
defparam \Y[0]~I .oe_sync_reset = "none";
defparam \Y[0]~I .operation_mode = "input";
defparam \Y[0]~I .output_async_reset = "none";
defparam \Y[0]~I .output_power_up = "low";
defparam \Y[0]~I .output_register_mode = "none";
defparam \Y[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \inst3|inst5~0 (
// Equation(s):
// \inst3|inst5~0_combout  = \X~combout [0] $ (\Cin~combout  $ (\Y~combout [0]))

	.dataa(\X~combout [0]),
	.datab(\Cin~combout ),
	.datac(\Y~combout [0]),
	.datad(vcc),
	.cin(gnd),
	.combout(\inst3|inst5~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst3|inst5~0 .lut_mask = 16'h9696;
defparam \inst3|inst5~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \Cout~I (
	.datain(\inst|inst2~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Cout));
// synopsys translate_off
defparam \Cout~I .input_async_reset = "none";
defparam \Cout~I .input_power_up = "low";
defparam \Cout~I .input_register_mode = "none";
defparam \Cout~I .input_sync_reset = "none";
defparam \Cout~I .oe_async_reset = "none";
defparam \Cout~I .oe_power_up = "low";
defparam \Cout~I .oe_register_mode = "none";
defparam \Cout~I .oe_sync_reset = "none";
defparam \Cout~I .operation_mode = "output";
defparam \Cout~I .output_async_reset = "none";
defparam \Cout~I .output_power_up = "low";
defparam \Cout~I .output_register_mode = "none";
defparam \Cout~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \S[3]~I (
	.datain(\inst|inst5~combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S[3]));
// synopsys translate_off
defparam \S[3]~I .input_async_reset = "none";
defparam \S[3]~I .input_power_up = "low";
defparam \S[3]~I .input_register_mode = "none";
defparam \S[3]~I .input_sync_reset = "none";
defparam \S[3]~I .oe_async_reset = "none";
defparam \S[3]~I .oe_power_up = "low";
defparam \S[3]~I .oe_register_mode = "none";
defparam \S[3]~I .oe_sync_reset = "none";
defparam \S[3]~I .operation_mode = "output";
defparam \S[3]~I .output_async_reset = "none";
defparam \S[3]~I .output_power_up = "low";
defparam \S[3]~I .output_register_mode = "none";
defparam \S[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \S[2]~I (
	.datain(\inst1|inst5~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S[2]));
// synopsys translate_off
defparam \S[2]~I .input_async_reset = "none";
defparam \S[2]~I .input_power_up = "low";
defparam \S[2]~I .input_register_mode = "none";
defparam \S[2]~I .input_sync_reset = "none";
defparam \S[2]~I .oe_async_reset = "none";
defparam \S[2]~I .oe_power_up = "low";
defparam \S[2]~I .oe_register_mode = "none";
defparam \S[2]~I .oe_sync_reset = "none";
defparam \S[2]~I .operation_mode = "output";
defparam \S[2]~I .output_async_reset = "none";
defparam \S[2]~I .output_power_up = "low";
defparam \S[2]~I .output_register_mode = "none";
defparam \S[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \S[1]~I (
	.datain(\inst2|inst5~combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S[1]));
// synopsys translate_off
defparam \S[1]~I .input_async_reset = "none";
defparam \S[1]~I .input_power_up = "low";
defparam \S[1]~I .input_register_mode = "none";
defparam \S[1]~I .input_sync_reset = "none";
defparam \S[1]~I .oe_async_reset = "none";
defparam \S[1]~I .oe_power_up = "low";
defparam \S[1]~I .oe_register_mode = "none";
defparam \S[1]~I .oe_sync_reset = "none";
defparam \S[1]~I .operation_mode = "output";
defparam \S[1]~I .output_async_reset = "none";
defparam \S[1]~I .output_power_up = "low";
defparam \S[1]~I .output_register_mode = "none";
defparam \S[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \S[0]~I (
	.datain(\inst3|inst5~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S[0]));
// synopsys translate_off
defparam \S[0]~I .input_async_reset = "none";
defparam \S[0]~I .input_power_up = "low";
defparam \S[0]~I .input_register_mode = "none";
defparam \S[0]~I .input_sync_reset = "none";
defparam \S[0]~I .oe_async_reset = "none";
defparam \S[0]~I .oe_power_up = "low";
defparam \S[0]~I .oe_register_mode = "none";
defparam \S[0]~I .oe_sync_reset = "none";
defparam \S[0]~I .operation_mode = "output";
defparam \S[0]~I .output_async_reset = "none";
defparam \S[0]~I .output_power_up = "low";
defparam \S[0]~I .output_register_mode = "none";
defparam \S[0]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
